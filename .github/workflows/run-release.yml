name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '40 23 * * *' # Проверка новых релизов
  workflow_dispatch: # Возможность вручную запустить Action

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
      release_tag: ${{ steps.get_release.outputs.release_tag }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Get the latest release from OpenWRT
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV
          
      - name: Check if release exists in your repo
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ env.release_tag }} | jq -r .tag_name)
          if [ -z "$RELEASE_EXISTS" ] || [ "$RELEASE_EXISTS" == "null" ]; then
            echo "release_exists=false" >> $GITHUB_ENV
          else
            echo "release_exists=true" >> $GITHUB_ENV
          fi
          
      - name: Check if release exists in file (skip if exists)
        id: check_saved_state
        run: |
          if [ -f saved_release_tag.txt ]; then
            echo "Found saved state, skipping further checks."
            exit 0
          fi

      - name: Save release tag for retry
        if: env.release_exists == 'false' && steps.check_saved_state.outcome != 'success'
        run: |
          echo "release_exists=false" > saved_release_tag.txt

      - name: force retry if release does not exist
        if: env.release_exists == 'false' && steps.check_saved_state.outcome != 'success'
        run: |
          echo "Forcing retry..."
          exit 1
          
      - name: Create release in your repo
        if: env.release_exists == 'false'
        run: |
          ART="
          \`\`\`
                   A M N E Z I A   W I R E G U A R D
          -----------------------------------------------------
                   ImmortalWrt ${{ env.release_tag }}
          -----------------------------------------------------
          \`\`\`"
          curl -X POST https://api.github.com/repos/samara15321/awg-immortalwrt/releases \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
                "tag_name": "${{ env.release_tag }}",
                "name": "ImmortalWrt ${{ env.release_tag }}",
                "body": "'"${ART//\"/\\\"}"'"
              }'
  run-build:
    needs: sync-releases
    if: needs.sync-releases.outputs.release_exists == 'false'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.sync-releases.outputs.release_tag }}


  restore-state:
    needs: sync-releases
    runs-on: ubuntu-latest
    steps:
      - name: Download saved_release_tag artifact
        uses: actions/download-artifact@v3
        with:
          name: saved_release_tag

      - name: Check if state is saved and continue
        run: |
          if [ -f saved_release_tag.txt ]; then
            echo "Found saved release tag, continuing process..."
          else
            echo "No saved release state found."
          fi      
