name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '30 23 */8 * *' # Проверка новых релизов каждые 8 дней
  workflow_dispatch: # Возможность вручную запустить Action

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
      release_tag: ${{ steps.get_release.outputs.release_tag }}
      missing_assets: ${{ steps.check_assets.outputs.missing_assets }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Get the latest release from OpenWRT
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')
          echo "::set-output name=release_tag::$RELEASE_TAG"

      - name: Check if release exists in your repo
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.get_release.outputs.release_tag }} | jq -r .tag_name)
          if [[ -z "$RELEASE_EXISTS" || "$RELEASE_EXISTS" == "null" ]]; then
            echo "::set-output name=release_exists::false"
          else
            echo "::set-output name=release_exists::true"
          fi

      - name: Check release assets for completeness
        id: check_assets
        run: |
          release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.get_release.outputs.release_tag }} | jq -r .id)
          if [[ "$release_id" == "null" ]]; then
            echo "::set-output name=missing_assets::true"
            exit 0
          fi

          asset_names=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/samara15321/awg-immortalwrt/releases/$release_id/assets | jq -r '.[].name')

          echo "Found assets: $asset_names"

          # Работа с job-config
          missing=false
          job_config="${{ needs.generate-config.outputs.job-config }}"

          # Если config отсутствует или некорректен
          if [[ -z "$job_config" || "$job_config" == "null" ]]; then
            echo "Missing or invalid job-config"
            echo "::set-output name=missing_assets::true"
            exit 1
          fi

          # Проверка корректности JSON
          if ! echo "$job_config" | jq empty; then
            echo "Invalid JSON in job-config"
            echo "::set-output name=missing_assets::true"
            exit 1
          fi

          # Проверяем необходимые активы
          for combo in $(echo "$job_config" | jq -r '.[] | "\(.pkgarch)_\(.target)_\(.subtarget)"'); do
            if ! echo "$asset_names" | grep -q "$combo"; then
              missing=true
              echo "Missing asset: $combo"
            fi
          done

          if [[ "$missing" == "true" ]]; then
            echo "::set-output name=missing_assets::true"
          else
            echo "::set-output name=missing_assets::false"
          fi

      - name: Create release in your repo
        if: steps.check_release.outputs.release_exists == 'false'
        run: |
          ART="
          \`\`\`
               A M N E Z I A   W I R E G U A R D
          -----------------------------------------------------
               ImmortalWrt ${{ steps.get_release.outputs.release_tag }}
          -----------------------------------------------------
          \`\`\`"
          curl -X POST https://api.github.com/repos/samara15321/awg-immortalwrt/releases \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
                \"tag_name\": \"${{ steps.get_release.outputs.release_tag }}\",
                \"name\": \"ImmortalWrt ${{ steps.get_release.outputs.release_tag }}\",
                \"body\": \"${ART//\"/\\\"}\"
              }"

  generate-config:
    runs-on: ubuntu-latest
    outputs:
      job-config: ${{ steps.generate.outputs.job-config }}
    steps:
      - name: Generate release configuration
        id: generate
        run: |
          CONFIG='[
            {"pkgarch": "x86_64", "target": "generic", "subtarget": "legacy"},
            {"pkgarch": "arm_cortex-a9", "target": "bcm53xx", "subtarget": "generic"}
          ]'
          echo "::set-output name=job-config::$CONFIG"

  run-build:
    needs: [sync-releases, generate-config]
    if: needs.sync-releases.outputs.missing_assets == 'true' || needs.sync-releases.outputs.release_exists == 'false'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.sync-releases.outputs.release_tag }}
