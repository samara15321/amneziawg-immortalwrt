name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '30 23 */8 * *' # Запуск каждые 8 дней
  workflow_dispatch: # Возможность вручную запустить Workflow

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
      release_tag: ${{ steps.get_release.outputs.release_tag }}
      missing_assets: ${{ steps.check_assets.outputs.missing_assets }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Get the latest release from OpenWRT
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')
          echo "::set-output name=release_tag::$RELEASE_TAG"
          
      - name: Check if release exists in your repo
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.get_release.outputs.release_tag }} | jq -r .tag_name)
          [[ "$RELEASE_EXISTS" == 'null' ]] && echo "::set-output name=release_exists::false" || echo "::set-output name=release_exists::true"
          
      - name: Check release assets for completeness
        id: check_assets
        run: |
          release_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.get_release.outputs.release_tag }} | jq -r .id)
          
          if [ "$release_id" == "null" ]; then
            echo "::set-output name=missing_assets::true"
            exit 0
          fi
          
          asset_names=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/samara15321/awg-immortalwrt/releases/$release_id/assets | jq -r '.[].name')

          # Генерация всех возможных комбинаций target и subtarget
          targets=("x86_64" "arm_cortex-a7" "mips_24kc")  # Пример targets
          subtargets=("generic" "legacy" "mini" "wifi")  # Пример subtargets

          missing=false
          for target in "${targets[@]}"; do
            for subtarget in "${subtargets[@]}"; do
              asset_name="${target}_${subtarget}.tar.gz"
              if ! echo "$asset_names" | grep -q "$asset_name"; then
                missing=true
                echo "Missing asset: $asset_name"
              fi
            done
          done
          
          if [[ "$missing" == 'true' ]]; then
            echo "::set-output name=missing_assets::true"
          else
            echo "::set-output name=missing_assets::false"
          fi
          
  generate-config:
    runs-on: ubuntu-latest
    outputs:
      job-config: ${{ steps.generate.outputs.job-config }}
    steps:
      - name: Generate configuration JSON
        id: generate
        run: |
          targets=("x86_64" "arm_cortex-a7" "mips_24kc")  # Пример targets
          subtargets=("generic" "legacy" "mini" "wifi")  # Пример subtargets
          
          config="[]"
          for target in "${targets[@]}"; do
            for subtarget in "${subtargets[@]}"; do
              config=$(echo $config | jq --arg target "$target" --arg subtarget "$subtarget" \
                '. += [{"pkgarch": $target, "target": $target, "subtarget": $subtarget}]')
            done
          done
          
          echo "::set-output name=job-config::$config"
          
  run-build:
    needs: [sync-releases, generate-config]
    if: needs.sync-releases.outputs.missing_assets == 'true' || needs.sync-releases.outputs.release_exists == 'false'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.sync-releases.outputs.release_tag }}
