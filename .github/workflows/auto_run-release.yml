name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '30 23 */8 * *'
  workflow_dispatch:

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read saved release tag
        id: read_saved_tag
        run: |
          SAVED_RELEASE=""
          if [ -f saved_release_tag.txt ] && [ -s saved_release_tag.txt ]; then
            SAVED_RELEASE=$(cat saved_release_tag.txt)
          fi
          echo "saved_release=$SAVED_RELEASE" >> $GITHUB_OUTPUT

      - name: Fetch latest release tag from ImmortalWRT
        id: fetch_latest_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')

          if [ -z "$RELEASE_TAG" ]; then
            echo "Error: No tags found in ImmortalWRT repository!"
            exit 1
          fi

          echo "Latest release tag is: $RELEASE_TAG"
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Compare release tags
        id: compare_tags
        run: |
          if [[ "${{ steps.read_saved_tag.outputs.saved_release }}" == "${{ steps.fetch_latest_release.outputs.latest_release }}" ]]; then
            echo "SKIP=true" >> $GITHUB_OUTPUT
          else
            echo "SKIP=false" >> $GITHUB_OUTPUT
          fi
        outputs:
          SKIP: ${{ steps.compare_tags.outputs.SKIP }}

      - name: Check if release exists in your repo
        id: check_release_exists
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            "https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.fetch_latest_release.outputs.latest_release }}")

          if [ "$RESPONSE" -eq 200 ]; then
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT
          fi
        outputs:
          release_exists: ${{ steps.check_release_exists.outputs.release_exists }}

      - name: Create release in your repo
        if: ${{ steps.check_release_exists.outputs.release_exists == 'false' && steps.compare_tags.outputs.SKIP == 'false' }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @- https://api.github.com/repos/samara15321/awg-immortalwrt/releases <<EOF
          {
            "tag_name": "${{ steps.fetch_latest_release.outputs.latest_release }}",
            "name": "ImmortalWrt $LATEST_RELEASE",
            "body": "ImmortalWrt: $LATEST_RELEASE"
          }
          EOF

      - name: Save latest release tag
        if: ${{ steps.compare_tags.outputs.SKIP == 'false' }}
        run: |
          echo "${{ steps.fetch_latest_release.outputs.latest_release }}" > saved_release_tag.txt
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add saved_release_tag.txt
          git commit -m "Update saved_release_tag to ${{ steps.fetch_latest_release.outputs.latest_release }}"
          git push

  run-build:
    needs: sync-releases
    if: needs.sync-releases.outputs.release_exists == 'false' && needs.sync-releases.outputs.SKIP == 'false'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.sync-releases.outputs.latest_release }}
