name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '30 23 */8 * *'
  workflow_dispatch:

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
      release_tag: ${{ steps.get_release.outputs.release_tag }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Get the latest release from OpenWRT
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Check if release exists in your repo
        id: check_release
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ steps.get_release.outputs.release_tag }}
          if [ "$RESPONSE" -eq 200 ]; then
            echo "release_exists=true" >> $GITHUB_OUTPUT
          else
            echo "release_exists=false" >> $GITHUB_OUTPUT

      - name: Save RELEASE_TAG to file every time
        run: |
          # Ensure we are working on the master branch
          git checkout master
          # Configure Git user name and email
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          # Save the release tag to the file, even if it's the same tag
          echo "${{ steps.get_release.outputs.release_tag }}" > saved_release_tag.txt
          # Add the file, commit, and push the changes
          git add saved_release_tag.txt
          git commit --allow-empty -m "Update saved_release_tag.txt with new release tag"
          git push origin master

      - name: Create release in your repo
        if: steps.check_release.outputs.release_exists == 'false'
        run: |
          curl -X POST https://api.github.com/repos/samara15321/awg-immortalwrt/releases \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "tag_name": "${{ steps.get_release.outputs.release_tag }}",
            "name": "ImmortalWrt ${{ steps.get_release.outputs.release_tag }}",
            "body": "A M N E Z I A - W I R E G U A R D"
          }
          EOF

  check-saved-tag:
    runs-on: ubuntu-latest
    needs: sync-releases
    outputs:
      can_proceed: ${{ steps.check_tag.outputs.can_proceed }}
      release_tag: ${{ steps.set_release_tag.outputs.release_tag }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Check saved release tag
        id: check_tag
        run: |
          if [ -f saved_release_tag.txt ]; then
            SAVED_TAG=$(cat saved_release_tag.txt)
            LATEST_TAG="${{ needs.sync-releases.outputs.release_tag }}"
            if [ "$SAVED_TAG" == "$LATEST_TAG" ]; then
              echo "can_proceed=true" >> $GITHUB_OUTPUT
            else
              echo "can_proceed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "can_proceed=false" >> $GITHUB_OUTPUT

      - name: Print the release_tag being passed
        run: |
          echo "Release Tag being passed: ${{ needs.sync-releases.outputs.release_tag }}"
          
      - name: Set release_tag output
        id: set_release_tag
        run: |
          echo "release_tag=${{ needs.sync-releases.outputs.release_tag }}" >> $GITHUB_OUTPUT
          echo "Calling second workflow with tag_name=${{ needs.sync-releases.outputs.release_tag }}"
        
  run-build:
    needs: check-saved-tag
    if: needs.check-saved-tag.outputs.can_proceed == 'true'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.check-saved-tag.outputs.release_tag }}
