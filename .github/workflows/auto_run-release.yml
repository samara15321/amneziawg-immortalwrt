name: Auto_Sync OpenWRT Releases

on:
  schedule:
    - cron: '30 23 */8 * *' # Проверка новых релизов каждые 8 дней
  workflow_dispatch: # Возможность вручную запустить Action

jobs:
  sync-releases:
    runs-on: ubuntu-latest
    outputs:
      release_exists: ${{ steps.check_release.outputs.release_exists }}
      release_tag: ${{ steps.get_release.outputs.release_tag }}
    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      # Получение последнего релиза из репозитория OpenWRT
      - name: Get the latest release from OpenWRT
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s https://api.github.com/repos/immortalwrt/immortalwrt/tags | jq -r '.[0].name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV
        env:
          TAG_CHECK_URL: "https://api.github.com/repos/immortalwrt/immortalwrt/tags"

      # Проверка, существует ли релиз в вашем репозитории
      - name: Check if release exists in your repo
        id: check_release
        run: |
          RELEASE_EXISTS=$(curl -s https://api.github.com/repos/samara15321/awg-immortalwrt/releases/tags/${{ env.release_tag }} | jq -r '.tag_name')
          if [ -z "$RELEASE_EXISTS" ] || [ "$RELEASE_EXISTS" == "null" ]; then
            echo "release_exists=false" >> $GITHUB_ENV
          else
            echo "release_exists=true" >> $GITHUB_ENV
          fi
        env:
          release_tag: ${{ env.release_tag }}

      # Создание нового релиза, если он ещё не существует
      - name: Create release in your repo
        if: env.release_exists == 'false' # Убедитесь, что релиз ещё не создан
        run: |
          # Формирование текста описания релиза (замена переносов на "\n" для JSON)
          ART="A M N E Z I A   W I R E G U A R D\n--------------------------------------\nImmortalWrt ${{ env.release_tag }}\n--------------------------------------"
          BODY=$(echo -e "$ART" | sed 's/"/\\"/g') # Экранирование кавычек для JSON
          
          # Вывод тела JSON для отладки (можно закомментировать)
          echo "Generated JSON:"
          echo "{
            \"tag_name\": \"${{ env.release_tag }}\",
            \"name\": \"ImmortalWrt ${{ env.release_tag }}\",
            \"body\": \"$BODY\"
          }"

          # Отправка запроса к GitHub API для создания релиза
          curl -X POST https://api.github.com/repos/samara15321/awg-immortalwrt/releases \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{
                \"tag_name\": \"${{ env.release_tag }}\",
                \"name\": \"ImmortalWrt ${{ env.release_tag }}\",
                \"body\": \"$BODY\"
              }"
        env:
          release_tag: ${{ env.release_tag }}

  # Дополнительное задание: Построение (Build)
  run-build:
    needs: sync-releases
    if: needs.sync-releases.outputs.release_exists == 'false'
    uses: samara15321/awg-immortalwrt/.github/workflows/auto_build.yml@master
    with:
      tag_name: ${{ needs.sync-releases.outputs.release_tag }}
